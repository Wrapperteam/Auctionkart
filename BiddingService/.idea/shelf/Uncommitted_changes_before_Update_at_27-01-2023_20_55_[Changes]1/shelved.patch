Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>3.0.2</version>\r\n        <relativePath/> <!-- lookup parent from repository -->\r\n    </parent>\r\n    <groupId>com.wrapperteam</groupId>\r\n    <artifactId>BiddingService</artifactId>\r\n    <version>0.0.1-SNAPSHOT</version>\r\n    <name>Bidding</name>\r\n    <description>Bidding</description>\r\n    <properties>\r\n        <java.version>17</java.version>\r\n    </properties>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web-services</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-devtools</artifactId>\r\n            <scope>runtime</scope>\r\n            <optional>true</optional>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.mysql</groupId>\r\n            <artifactId>mysql-connector-j</artifactId>\r\n            <scope>runtime</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <version>RELEASE</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	
+++ b/pom.xml	
@@ -9,15 +9,25 @@
         <relativePath/> <!-- lookup parent from repository -->
     </parent>
     <groupId>com.wrapperteam</groupId>
-    <artifactId>BiddingService</artifactId>
+    <artifactId>biddingService</artifactId>
     <version>0.0.1-SNAPSHOT</version>
     <name>Bidding</name>
     <description>Bidding</description>
     <properties>
         <java.version>17</java.version>
+        <spring-cloud.version>2022.0.0</spring-cloud.version>
+
     </properties>
     <dependencies>
         <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
+        </dependency>
+        <dependency>
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter-data-jpa</artifactId>
         </dependency>
@@ -25,6 +35,11 @@
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter-web</artifactId>
         </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
+        </dependency>
+
 
         <dependency>
             <groupId>org.springframework.boot</groupId>
@@ -53,7 +68,19 @@
             <version>RELEASE</version>
             <scope>compile</scope>
         </dependency>
+
     </dependencies>
+    <dependencyManagement>
+        <dependencies>
+            <dependency>
+                <groupId>org.springframework.cloud</groupId>
+                <artifactId>spring-cloud-dependencies</artifactId>
+                <version>${spring-cloud.version}</version>
+                <type>pom</type>
+                <scope>import</scope>
+            </dependency>
+        </dependencies>
+    </dependencyManagement>
 
     <build>
         <plugins>
Index: src/main/java/com/wrapperteam/bidding/BiddingApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.wrapperteam.bidding;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\n@SpringBootApplication\r\npublic class BiddingApplication {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(BiddingApplication.class, args);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/wrapperteam/bidding/BiddingApplication.java b/src/main/java/com/wrapperteam/bidding/BiddingApplication.java
--- a/src/main/java/com/wrapperteam/bidding/BiddingApplication.java	
+++ b/src/main/java/com/wrapperteam/bidding/BiddingApplication.java	
@@ -2,8 +2,11 @@
 
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;
+
 
 @SpringBootApplication
+
 public class BiddingApplication {
 
     public static void main(String[] args) {
Index: src/main/java/com/wrapperteam/bidding/service/biddingservice.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.wrapperteam.bidding.service;\r\n\r\nimport com.wrapperteam.bidding.model.biddingmodel;\r\nimport com.wrapperteam.bidding.repository.biddingrepo;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\n@Service\r\npublic class biddingservice {\r\n    @Autowired\r\n    biddingrepo repo;\r\n    public List<biddingmodel> getAll() {\r\n        return repo.findAll();\r\n\r\n    }\r\n\r\n    public biddingmodel saveBidder(biddingmodel bidder) {\r\n        return repo.save(bidder);\r\n    }\r\n\r\n    public String updateBidder(biddingmodel bidder) {\r\n\r\n            Optional<biddingmodel> biddupdate = repo.findById(bidder.getUserID());\r\n\r\n            if(biddupdate.isPresent()) {\r\n                biddupdate.get().setAmount(bidder.getAmount());\r\n\r\n            }else {\r\n                return \"Not found\";\r\n            }\r\n\r\n            repo.save(biddupdate.get());\r\n            return \"Successfully saved\";\r\n        }\r\n    public String deleteBidder(Integer bidder) {\r\n        // TODO Auto-generated method stub\r\n        repo.deleteById(bidder);\r\n\r\n        return \"Employee Details Deleted\";\r\n    }\r\n\r\n\r\n    public String bidding(biddingmodel bidder) {\r\n        //productID verify\r\n        //useridverify\r\n        //product productid,amount,expirydatetime -whole object\r\n        // (expirydatetime<sysdate)&&\r\n        //amount is present then (pre amount<given amount) update,else get min amount\r\n        //\r\n\r\n        return null ;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/wrapperteam/bidding/service/biddingservice.java b/src/main/java/com/wrapperteam/bidding/service/biddingservice.java
--- a/src/main/java/com/wrapperteam/bidding/service/biddingservice.java	
+++ b/src/main/java/com/wrapperteam/bidding/service/biddingservice.java	
@@ -23,7 +23,7 @@
 
     public String updateBidder(biddingmodel bidder) {
 
-            Optional<biddingmodel> biddupdate = repo.findById(bidder.getUserID());
+            Optional<biddingmodel> biddupdate = repo.findById(bidder.getId());
 
             if(biddupdate.isPresent()) {
                 biddupdate.get().setAmount(bidder.getAmount());
Index: ../ServiceRegistary/.mvn/wrapper/maven-wrapper.properties
===================================================================
diff --git a/../ServiceRegistary/.mvn/wrapper/maven-wrapper.properties b/../ServiceRegistary/.mvn/wrapper/maven-wrapper.properties
deleted file mode 100644
--- a/../ServiceRegistary/.mvn/wrapper/maven-wrapper.properties	
+++ /dev/null	
@@ -1,2 +0,0 @@
-distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.8.6/apache-maven-3.8.6-bin.zip
-wrapperUrl=https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar
Index: ../ServiceRegistary/pom.xml
===================================================================
diff --git a/../ServiceRegistary/pom.xml b/../ServiceRegistary/pom.xml
deleted file mode 100644
--- a/../ServiceRegistary/pom.xml	
+++ /dev/null	
@@ -1,63 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <parent>
-        <groupId>org.springframework.boot</groupId>
-        <artifactId>spring-boot-starter-parent</artifactId>
-        <version>3.0.2</version>
-        <relativePath/> <!-- lookup parent from repository -->
-    </parent>
-    <groupId>com.wrapperteam</groupId>
-    <artifactId>ServiceRegistary</artifactId>
-    <version>0.0.1-SNAPSHOT</version>
-    <name>ServiceRegistary</name>
-    <description>ServiceRegistary</description>
-    <properties>
-        <java.version>17</java.version>
-        <spring-cloud.version>2022.0.0</spring-cloud.version>
-    </properties>
-    <dependencies>
-        <dependency>
-            <groupId>org.springframework.cloud</groupId>
-            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-test</artifactId>
-            <scope>test</scope>
-        </dependency>
-    </dependencies>
-    <dependencyManagement>
-        <dependencies>
-            <dependency>
-                <groupId>org.springframework.cloud</groupId>
-                <artifactId>spring-cloud-dependencies</artifactId>
-                <version>${spring-cloud.version}</version>
-                <type>pom</type>
-                <scope>import</scope>
-            </dependency>
-        </dependencies>
-    </dependencyManagement>
-
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>org.springframework.boot</groupId>
-                <artifactId>spring-boot-maven-plugin</artifactId>
-            </plugin>
-        </plugins>
-    </build>
-    <repositories>
-        <repository>
-            <id>netflix-candidates</id>
-            <name>Netflix Candidates</name>
-            <url>https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates</url>
-            <snapshots>
-                <enabled>false</enabled>
-            </snapshots>
-        </repository>
-    </repositories>
-
-</project>
Index: target/maven-archiver/pom.properties
===================================================================
diff --git a/target/maven-archiver/pom.properties b/target/maven-archiver/pom.properties
deleted file mode 100644
--- a/target/maven-archiver/pom.properties	
+++ /dev/null	
@@ -1,3 +0,0 @@
-artifactId=Bidding
-groupId=com.wrapperteam
-version=0.0.1-SNAPSHOT
Index: ../ServiceRegistary/src/test/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplicationTests.java
===================================================================
diff --git a/../ServiceRegistary/src/test/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplicationTests.java b/../ServiceRegistary/src/test/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplicationTests.java
deleted file mode 100644
--- a/../ServiceRegistary/src/test/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplicationTests.java	
+++ /dev/null	
@@ -1,13 +0,0 @@
-package com.wrapperteam.serviceregistary;
-
-import org.junit.jupiter.api.Test;
-import org.springframework.boot.test.context.SpringBootTest;
-
-@SpringBootTest
-class ServiceRegistaryApplicationTests {
-
-    @Test
-    void contextLoads() {
-    }
-
-}
Index: target/surefire-reports/TEST-com.wrapperteam.bidding.BiddingApplicationTests.xml
===================================================================
diff --git a/target/surefire-reports/TEST-com.wrapperteam.bidding.BiddingApplicationTests.xml b/target/surefire-reports/TEST-com.wrapperteam.bidding.BiddingApplicationTests.xml
deleted file mode 100644
--- a/target/surefire-reports/TEST-com.wrapperteam.bidding.BiddingApplicationTests.xml	
+++ /dev/null	
@@ -1,63 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.wrapperteam.bidding.BiddingApplicationTests" time="10.666" tests="1" errors="0" skipped="0" failures="0">
-  <properties>
-    <property name="java.specification.version" value="19"/>
-    <property name="sun.cpu.isalist" value="amd64"/>
-    <property name="sun.jnu.encoding" value="Cp1252"/>
-    <property name="java.class.path" value="C:\Users\ustjavafsdb403\Auctionkart\Bidding\target\test-classes;C:\Users\ustjavafsdb403\Auctionkart\Bidding\target\classes;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.2\spring-boot-starter-data-jpa-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.2\spring-boot-starter-aop-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-aop\6.0.4\spring-aop-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.2\spring-boot-starter-jdbc-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-jdbc\6.0.4\spring-jdbc-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\hibernate\orm\hibernate-core\6.1.6.Final\hibernate-core-6.1.6.Final.jar;C:\Users\ustjavafsdb403\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ustjavafsdb403\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\ustjavafsdb403\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.2.Final\hibernate-commons-annotations-6.0.2.Final.jar;C:\Users\ustjavafsdb403\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\ustjavafsdb403\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\ustjavafsdb403\.m2\repository\net\bytebuddy\byte-buddy\1.12.22\byte-buddy-1.12.22.jar;C:\Users\ustjavafsdb403\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.1\jaxb-runtime-4.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.1\jaxb-core-4.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\glassfish\jaxb\txw2\4.0.1\txw2-4.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\ustjavafsdb403\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\ustjavafsdb403\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\data\spring-data-jpa\3.0.1\spring-data-jpa-3.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\data\spring-data-commons\3.0.1\spring-data-commons-3.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-orm\6.0.4\spring-orm-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-context\6.0.4\spring-context-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-tx\6.0.4\spring-tx-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-beans\6.0.4\spring-beans-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\slf4j\slf4j-api\2.0.6\slf4j-api-2.0.6.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-aspects\6.0.4\spring-aspects-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.2\spring-boot-starter-web-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.2\spring-boot-starter-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.2\spring-boot-starter-logging-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\ch\qos\logback\logback-classic\1.4.5\logback-classic-1.4.5.jar;C:\Users\ustjavafsdb403\.m2\repository\ch\qos\logback\logback-core\1.4.5\logback-core-1.4.5.jar;C:\Users\ustjavafsdb403\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\ustjavafsdb403\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\ustjavafsdb403\.m2\repository\org\slf4j\jul-to-slf4j\2.0.6\jul-to-slf4j-2.0.6.jar;C:\Users\ustjavafsdb403\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.2\spring-boot-starter-json-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.1\jackson-databind-2.14.1.jar;C:\Users\ustjavafsdb403\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.1\jackson-annotations-2.14.1.jar;C:\Users\ustjavafsdb403\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.1\jackson-core-2.14.1.jar;C:\Users\ustjavafsdb403\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.1\jackson-datatype-jdk8-2.14.1.jar;C:\Users\ustjavafsdb403\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.1\jackson-datatype-jsr310-2.14.1.jar;C:\Users\ustjavafsdb403\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.1\jackson-module-parameter-names-2.14.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.2\spring-boot-starter-tomcat-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.5\tomcat-embed-core-10.1.5.jar;C:\Users\ustjavafsdb403\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.5\tomcat-embed-el-10.1.5.jar;C:\Users\ustjavafsdb403\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.5\tomcat-embed-websocket-10.1.5.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-web\6.0.4\spring-web-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\io\micrometer\micrometer-observation\1.10.3\micrometer-observation-1.10.3.jar;C:\Users\ustjavafsdb403\.m2\repository\io\micrometer\micrometer-commons\1.10.3\micrometer-commons-1.10.3.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-webmvc\6.0.4\spring-webmvc-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-expression\6.0.4\spring-expression-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-web-services\3.0.2\spring-boot-starter-web-services-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\com\sun\xml\messaging\saaj\saaj-impl\3.0.0\saaj-impl-3.0.0.jar;C:\Users\ustjavafsdb403\.m2\repository\jakarta\xml\soap\jakarta.xml.soap-api\3.0.0\jakarta.xml.soap-api-3.0.0.jar;C:\Users\ustjavafsdb403\.m2\repository\org\jvnet\staxex\stax-ex\2.1.0\stax-ex-2.1.0.jar;C:\Users\ustjavafsdb403\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\eclipse\angus\angus-activation\1.0.0\angus-activation-1.0.0.jar;C:\Users\ustjavafsdb403\.m2\repository\jakarta\xml\ws\jakarta.xml.ws-api\4.0.0\jakarta.xml.ws-api-4.0.0.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-oxm\6.0.4\spring-oxm-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\ws\spring-ws-core\4.0.1\spring-ws-core-4.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\ws\spring-xml\4.0.1\spring-xml-4.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-devtools\3.0.2\spring-boot-devtools-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot\3.0.2\spring-boot-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.2\spring-boot-autoconfigure-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\com\mysql\mysql-connector-j\8.0.32\mysql-connector-j-8.0.32.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.2\spring-boot-starter-test-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-test\3.0.2\spring-boot-test-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.2\spring-boot-test-autoconfigure-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\ustjavafsdb403\.m2\repository\net\minidev\json-smart\2.4.8\json-smart-2.4.8.jar;C:\Users\ustjavafsdb403\.m2\repository\net\minidev\accessors-smart\2.4.8\accessors-smart-2.4.8.jar;C:\Users\ustjavafsdb403\.m2\repository\org\ow2\asm\asm\9.1\asm-9.1.jar;C:\Users\ustjavafsdb403\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\ustjavafsdb403\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\ustjavafsdb403\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\ustjavafsdb403\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.22\byte-buddy-agent-1.12.22.jar;C:\Users\ustjavafsdb403\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\ustjavafsdb403\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-core\6.0.4\spring-core-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-jcl\6.0.4\spring-jcl-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-test\6.0.4\spring-test-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;"/>
-    <property name="java.vm.vendor" value="Oracle Corporation"/>
-    <property name="sun.arch.data.model" value="64"/>
-    <property name="user.variant" value=""/>
-    <property name="java.vendor.url" value="https://java.oracle.com/"/>
-    <property name="user.timezone" value="GMT+05:30"/>
-    <property name="os.name" value="Windows 10"/>
-    <property name="java.vm.specification.version" value="19"/>
-    <property name="sun.java.launcher" value="SUN_STANDARD"/>
-    <property name="user.country" value="IN"/>
-    <property name="sun.boot.library.path" value="C:\Users\ustjavafsdb403\.jdks\openjdk-19.0.1\bin"/>
-    <property name="sun.java.command" value="C:\Users\USTJAV~1\AppData\Local\Temp\surefire4389572854420020523\surefirebooter5204046262892804137.jar C:\Users\ustjavafsdb403\AppData\Local\Temp\surefire4389572854420020523 2023-01-25T15-37-39_217-jvmRun1 surefire13839040718936037798tmp surefire_014260370842002793338tmp"/>
-    <property name="jdk.debug" value="release"/>
-    <property name="surefire.test.class.path" value="C:\Users\ustjavafsdb403\Auctionkart\Bidding\target\test-classes;C:\Users\ustjavafsdb403\Auctionkart\Bidding\target\classes;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.2\spring-boot-starter-data-jpa-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.2\spring-boot-starter-aop-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-aop\6.0.4\spring-aop-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.2\spring-boot-starter-jdbc-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-jdbc\6.0.4\spring-jdbc-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\hibernate\orm\hibernate-core\6.1.6.Final\hibernate-core-6.1.6.Final.jar;C:\Users\ustjavafsdb403\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ustjavafsdb403\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\ustjavafsdb403\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.2.Final\hibernate-commons-annotations-6.0.2.Final.jar;C:\Users\ustjavafsdb403\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\ustjavafsdb403\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\ustjavafsdb403\.m2\repository\net\bytebuddy\byte-buddy\1.12.22\byte-buddy-1.12.22.jar;C:\Users\ustjavafsdb403\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.1\jaxb-runtime-4.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.1\jaxb-core-4.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\glassfish\jaxb\txw2\4.0.1\txw2-4.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\ustjavafsdb403\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\ustjavafsdb403\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\data\spring-data-jpa\3.0.1\spring-data-jpa-3.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\data\spring-data-commons\3.0.1\spring-data-commons-3.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-orm\6.0.4\spring-orm-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-context\6.0.4\spring-context-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-tx\6.0.4\spring-tx-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-beans\6.0.4\spring-beans-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\slf4j\slf4j-api\2.0.6\slf4j-api-2.0.6.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-aspects\6.0.4\spring-aspects-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.2\spring-boot-starter-web-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.2\spring-boot-starter-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.2\spring-boot-starter-logging-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\ch\qos\logback\logback-classic\1.4.5\logback-classic-1.4.5.jar;C:\Users\ustjavafsdb403\.m2\repository\ch\qos\logback\logback-core\1.4.5\logback-core-1.4.5.jar;C:\Users\ustjavafsdb403\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\ustjavafsdb403\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\ustjavafsdb403\.m2\repository\org\slf4j\jul-to-slf4j\2.0.6\jul-to-slf4j-2.0.6.jar;C:\Users\ustjavafsdb403\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.2\spring-boot-starter-json-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.1\jackson-databind-2.14.1.jar;C:\Users\ustjavafsdb403\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.1\jackson-annotations-2.14.1.jar;C:\Users\ustjavafsdb403\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.1\jackson-core-2.14.1.jar;C:\Users\ustjavafsdb403\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.1\jackson-datatype-jdk8-2.14.1.jar;C:\Users\ustjavafsdb403\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.1\jackson-datatype-jsr310-2.14.1.jar;C:\Users\ustjavafsdb403\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.1\jackson-module-parameter-names-2.14.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.2\spring-boot-starter-tomcat-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.5\tomcat-embed-core-10.1.5.jar;C:\Users\ustjavafsdb403\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.5\tomcat-embed-el-10.1.5.jar;C:\Users\ustjavafsdb403\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.5\tomcat-embed-websocket-10.1.5.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-web\6.0.4\spring-web-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\io\micrometer\micrometer-observation\1.10.3\micrometer-observation-1.10.3.jar;C:\Users\ustjavafsdb403\.m2\repository\io\micrometer\micrometer-commons\1.10.3\micrometer-commons-1.10.3.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-webmvc\6.0.4\spring-webmvc-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-expression\6.0.4\spring-expression-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-web-services\3.0.2\spring-boot-starter-web-services-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\com\sun\xml\messaging\saaj\saaj-impl\3.0.0\saaj-impl-3.0.0.jar;C:\Users\ustjavafsdb403\.m2\repository\jakarta\xml\soap\jakarta.xml.soap-api\3.0.0\jakarta.xml.soap-api-3.0.0.jar;C:\Users\ustjavafsdb403\.m2\repository\org\jvnet\staxex\stax-ex\2.1.0\stax-ex-2.1.0.jar;C:\Users\ustjavafsdb403\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\eclipse\angus\angus-activation\1.0.0\angus-activation-1.0.0.jar;C:\Users\ustjavafsdb403\.m2\repository\jakarta\xml\ws\jakarta.xml.ws-api\4.0.0\jakarta.xml.ws-api-4.0.0.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-oxm\6.0.4\spring-oxm-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\ws\spring-ws-core\4.0.1\spring-ws-core-4.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\ws\spring-xml\4.0.1\spring-xml-4.0.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-devtools\3.0.2\spring-boot-devtools-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot\3.0.2\spring-boot-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.2\spring-boot-autoconfigure-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\com\mysql\mysql-connector-j\8.0.32\mysql-connector-j-8.0.32.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.2\spring-boot-starter-test-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-test\3.0.2\spring-boot-test-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.2\spring-boot-test-autoconfigure-3.0.2.jar;C:\Users\ustjavafsdb403\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\ustjavafsdb403\.m2\repository\net\minidev\json-smart\2.4.8\json-smart-2.4.8.jar;C:\Users\ustjavafsdb403\.m2\repository\net\minidev\accessors-smart\2.4.8\accessors-smart-2.4.8.jar;C:\Users\ustjavafsdb403\.m2\repository\org\ow2\asm\asm\9.1\asm-9.1.jar;C:\Users\ustjavafsdb403\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\ustjavafsdb403\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\ustjavafsdb403\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\ustjavafsdb403\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.22\byte-buddy-agent-1.12.22.jar;C:\Users\ustjavafsdb403\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\ustjavafsdb403\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\ustjavafsdb403\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-core\6.0.4\spring-core-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-jcl\6.0.4\spring-jcl-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\springframework\spring-test\6.0.4\spring-test-6.0.4.jar;C:\Users\ustjavafsdb403\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\ustjavafsdb403\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;"/>
-    <property name="sun.cpu.endian" value="little"/>
-    <property name="user.home" value="C:\Users\ustjavafsdb403"/>
-    <property name="user.language" value="en"/>
-    <property name="java.specification.vendor" value="Oracle Corporation"/>
-    <property name="java.version.date" value="2022-10-18"/>
-    <property name="java.home" value="C:\Users\ustjavafsdb403\.jdks\openjdk-19.0.1"/>
-    <property name="file.separator" value="\"/>
-    <property name="basedir" value="C:\Users\ustjavafsdb403\Auctionkart\Bidding"/>
-    <property name="java.vm.compressedOopsMode" value="Zero based"/>
-    <property name="line.separator" value="&#10;"/>
-    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
-    <property name="java.specification.name" value="Java Platform API Specification"/>
-    <property name="surefire.real.class.path" value="C:\Users\USTJAV~1\AppData\Local\Temp\surefire4389572854420020523\surefirebooter5204046262892804137.jar"/>
-    <property name="user.script" value=""/>
-    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
-    <property name="java.runtime.version" value="19.0.1+10-21"/>
-    <property name="user.name" value="ustjavafsdb403"/>
-    <property name="stdout.encoding" value="Cp1252"/>
-    <property name="path.separator" value=";"/>
-    <property name="os.version" value="10.0"/>
-    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
-    <property name="file.encoding" value="UTF-8"/>
-    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
-    <property name="localRepository" value="C:\Users\ustjavafsdb403\.m2\repository"/>
-    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
-    <property name="java.io.tmpdir" value="C:\Users\USTJAV~1\AppData\Local\Temp\"/>
-    <property name="idea.version" value="2022.3.1"/>
-    <property name="java.version" value="19.0.1"/>
-    <property name="user.dir" value="C:\Users\ustjavafsdb403\Auctionkart\Bidding"/>
-    <property name="os.arch" value="amd64"/>
-    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
-    <property name="sun.os.patch.level" value=""/>
-    <property name="native.encoding" value="Cp1252"/>
-    <property name="java.library.path" value="C:\Users\ustjavafsdb403\.jdks\openjdk-19.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\jdk-11.0.15\bin;C:\Program Files (x86)\Citrix\HDX\bin\;C:\Program Files\Citrix\HDX\bin\;C:\Program Files\Git\cmd;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\Kubernetes\Minikube;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\ustjavafsdb403\AppData\Local\Microsoft\WindowsApps;C:\ProgramData\ustjavafsdb403\GitHubDesktop\bin;E:\Software\apache-maven-3.8.7\bin;C:\Users\ustjavafsdb403\AppData\Roaming\npm;;."/>
-    <property name="java.vm.info" value="mixed mode, sharing"/>
-    <property name="stderr.encoding" value="Cp1252"/>
-    <property name="java.vendor" value="Oracle Corporation"/>
-    <property name="java.vm.version" value="19.0.1+10-21"/>
-    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
-    <property name="java.class.version" value="63.0"/>
-  </properties>
-  <testcase name="contextLoads" classname="com.wrapperteam.bidding.BiddingApplicationTests" time="0.452"/>
-</testsuite>
\ No newline at end of file
Index: ../ServiceRegistary/src/main/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplication.java
===================================================================
diff --git a/../ServiceRegistary/src/main/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplication.java b/../ServiceRegistary/src/main/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplication.java
deleted file mode 100644
--- a/../ServiceRegistary/src/main/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplication.java	
+++ /dev/null	
@@ -1,15 +0,0 @@
-package com.wrapperteam.serviceregistary;
-
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;
-
-@SpringBootApplication
-@EnableEurekaServer
-public class ServiceRegistaryApplication {
-
-    public static void main(String[] args) {
-        SpringApplication.run(ServiceRegistaryApplication.class, args);
-    }
-
-}
Index: ../ServiceRegistary/src/main/resources/application.properties
===================================================================
diff --git a/../ServiceRegistary/src/main/resources/application.properties b/../ServiceRegistary/src/main/resources/application.properties
deleted file mode 100644
--- a/../ServiceRegistary/src/main/resources/application.properties	
+++ /dev/null	
@@ -1,3 +0,0 @@
-server.port=8761
-eureka.client.register-with-eureka=false
-eureka.client.fetch-registry=false
Index: target/surefire-reports/com.wrapperteam.bidding.BiddingApplicationTests.txt
===================================================================
diff --git a/target/surefire-reports/com.wrapperteam.bidding.BiddingApplicationTests.txt b/target/surefire-reports/com.wrapperteam.bidding.BiddingApplicationTests.txt
deleted file mode 100644
--- a/target/surefire-reports/com.wrapperteam.bidding.BiddingApplicationTests.txt	
+++ /dev/null	
@@ -1,4 +0,0 @@
--------------------------------------------------------------------------------
-Test set: com.wrapperteam.bidding.BiddingApplicationTests
--------------------------------------------------------------------------------
-Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 10.666 s - in com.wrapperteam.bidding.BiddingApplicationTests
Index: ../ServiceRegistary/.gitignore
===================================================================
diff --git a/../ServiceRegistary/.gitignore b/../ServiceRegistary/.gitignore
deleted file mode 100644
--- a/../ServiceRegistary/.gitignore	
+++ /dev/null	
@@ -1,33 +0,0 @@
-HELP.md
-target/
-!.mvn/wrapper/maven-wrapper.jar
-!**/src/main/**/target/
-!**/src/test/**/target/
-
-### STS ###
-.apt_generated
-.classpath
-.factorypath
-.project
-.settings
-.springBeans
-.sts4-cache
-
-### IntelliJ IDEA ###
-.idea
-*.iws
-*.iml
-*.ipr
-
-### NetBeans ###
-/nbproject/private/
-/nbbuild/
-/dist/
-/nbdist/
-/.nb-gradle/
-build/
-!**/src/main/**/build/
-!**/src/test/**/build/
-
-### VS Code ###
-.vscode/
Index: ../cloud-gateway/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server:\r\n  port: 9191\r\n\r\nspring:\r\n  application:\r\n    name: API-GATEWAY\r\n  cloud:\r\n    gateway:\r\n      routes:\r\n        - id: USER-SERVICE\r\n          uri: lb://USER-SERVICE\r\n          predicates:\r\n            - Path=/user/**\r\n          filters:\r\n            - name: CircuitBreaker\r\n              args:\r\n                name: USER-SERVICE\r\n                fallbackuri: forward:/userServiceFallBack\r\n        - id: MANUFACTURING-SERVICE\r\n          uri: lb://MANUFACTURING-SERVICE\r\n          predicates:\r\n            - Path=/manufacturer/**\r\n          filters:\r\n            - name: CircuitBreaker\r\n              args:\r\n                name: MANUFACTURING-SERVICE\r\n                fallbackuri: forward:/manufacturerServiceFallBack\r\n        - id: CROPS-SERVICE\r\n          uri: lb://CROPS-SERVICE\r\n          predicates:\r\n            - Path=/crops/**\r\n          filters:\r\n            - name: CircuitBreaker\r\n              args:\r\n                name: CROPS-SERVICE\r\n                fallbackuri: forward:/cropServiceFallBack\r\n        - id: FERTILIZERS-SERVICE\r\n          uri: lb://FERTILIZERS-SERVICE\r\n          predicates:\r\n            - Path=/fertilizers/**\r\n          filters:\r\n            - name: CircuitBreaker\r\n              args:\r\n                name: FERTILIZERS-SERVICE\r\n                fallbackuri: forward:/fertilizerServiceFallBack\r\n        - id: CART-SERVICE\r\n          uri: lb://CART-SERVICE\r\n          predicates:\r\n            - Path=/cart/**\r\n          filters:\r\n            - name: CircuitBreaker\r\n              args:\r\n                name: CART-SERVICE\r\n                fallbackuri: forward:/cartServiceFallBack\r\n\r\nhystrix:\r\n  command:\r\n    fallbackcmd:\r\n      execution:\r\n        isolation:\r\n          thread:\r\n            timeoutInMilliseconds: 4000\r\n\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: hystrix.stream\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../cloud-gateway/src/main/resources/application.yml b/../cloud-gateway/src/main/resources/application.yml
--- a/../cloud-gateway/src/main/resources/application.yml	
+++ b/../cloud-gateway/src/main/resources/application.yml	
@@ -1,69 +1,73 @@
 server:
-  port: 9191
+  port: 8989
 
 spring:
   application:
-    name: API-GATEWAY
+    name: GATEWAY-SERVICE
   cloud:
     gateway:
       routes:
-        - id: USER-SERVICE
-          uri: lb://USER-SERVICE
-          predicates:
-            - Path=/user/**
-          filters:
-            - name: CircuitBreaker
-              args:
-                name: USER-SERVICE
-                fallbackuri: forward:/userServiceFallBack
-        - id: MANUFACTURING-SERVICE
-          uri: lb://MANUFACTURING-SERVICE
-          predicates:
-            - Path=/manufacturer/**
-          filters:
-            - name: CircuitBreaker
-              args:
-                name: MANUFACTURING-SERVICE
-                fallbackuri: forward:/manufacturerServiceFallBack
-        - id: CROPS-SERVICE
-          uri: lb://CROPS-SERVICE
-          predicates:
-            - Path=/crops/**
-          filters:
-            - name: CircuitBreaker
-              args:
-                name: CROPS-SERVICE
-                fallbackuri: forward:/cropServiceFallBack
-        - id: FERTILIZERS-SERVICE
-          uri: lb://FERTILIZERS-SERVICE
-          predicates:
-            - Path=/fertilizers/**
-          filters:
-            - name: CircuitBreaker
-              args:
-                name: FERTILIZERS-SERVICE
-                fallbackuri: forward:/fertilizerServiceFallBack
-        - id: CART-SERVICE
-          uri: lb://CART-SERVICE
-          predicates:
-            - Path=/cart/**
-          filters:
-            - name: CircuitBreaker
-              args:
-                name: CART-SERVICE
-                fallbackuri: forward:/cartServiceFallBack
+        - id: authenticationMicroservice
+          uri: lb://AUTHENTICATION-MICROSERVICE
+          predicate:
+          - path: /authentication/**
+         filters:
+          - name: CircutBreaker
+          - args:
+              name: authenticationMicroservice
+              fallbackuri: forward:/authenticationFallBack
+          - id: biddingService
+            uri: lb://BIDDING-MICROSERVICE
+            predicate:
+          - path: /bidding/**
+         filters:
+         - name: CircutBreaker
+         - args:
+            name: productService
+            fallbackuri: forward:/productFallBack
+         - id:
+            uri: lb://BIDDING-MICROSERVICE
+            predicate:
+              - path: /bidding/**
+            filters:
+              - name: CircutBreaker
+              - args:
+                  name: biddingService
+                  fallbackuri: forward:/biddingFallBack
+         - id: productService
+             uri: lb://BIDDING-MICROSERVICE
+             predicate:
+               - path: /bidding/**
+             filters:
+               - name: CircutBreaker
+               - args:
+                   name: biddingService
+                   fallbackuri: forward:/biddingFallBack
+  eureka:
+    client:
+      register-with-eureka: true
+      service-url:
+        defaultZone: http://localhost:8762/eureka/
+  instance:
+    hostname: localhost
+
+
 
-hystrix:
-  command:
-    fallbackcmd:
-      execution:
-        isolation:
-          thread:
-            timeoutInMilliseconds: 4000
+  hystrix:
+    command:
+      fallbackcmd:
+        execution:
+          isolation:
+            thread:
+              timeoutInMilliseconds: 4000
 
 
-management:
-  endpoints:
-    web:
-      exposure:
-        include: hystrix.stream
+  management:
+    endpoints:
+      web:
+        exposure:
+          include: hystrix.stream
+
+
+
+
Index: ../authenticationMicroservice/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>3.0.1</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.ust.AuthenticationMicroservice</groupId>\r\n\t<artifactId>authenticationMicroservice</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>authenticationMicroservice</name>\r\n\t<description>Authentication Microservice</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.mysql</groupId>\r\n\t\t\t<artifactId>mysql-connector-j</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-security</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.security</groupId>\r\n\t\t\t<artifactId>spring-security-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<excludes>\r\n\t\t\t\t\t\t<exclude>\r\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t\t\t\t</exclude>\r\n\t\t\t\t\t</excludes>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\t<repositories>\r\n\t\t<repository>\r\n\t\t\t<id>spring-milestones</id>\r\n\t\t\t<name>Spring Milestones</name>\r\n\t\t\t<url>https://repo.spring.io/milestone</url>\r\n\t\t\t<snapshots>\r\n\t\t\t\t<enabled>false</enabled>\r\n\t\t\t</snapshots>\r\n\t\t</repository>\r\n\t\t<repository>\r\n\t\t\t<id>spring-snapshots</id>\r\n\t\t\t<name>Spring Snapshots</name>\r\n\t\t\t<url>https://repo.spring.io/snapshot</url>\r\n\t\t\t<releases>\r\n\t\t\t\t<enabled>false</enabled>\r\n\t\t\t</releases>\r\n\t\t</repository>\r\n\t</repositories>\r\n\t<pluginRepositories>\r\n\t\t<pluginRepository>\r\n\t\t\t<id>spring-milestones</id>\r\n\t\t\t<name>Spring Milestones</name>\r\n\t\t\t<url>https://repo.spring.io/milestone</url>\r\n\t\t\t<snapshots>\r\n\t\t\t\t<enabled>false</enabled>\r\n\t\t\t</snapshots>\r\n\t\t</pluginRepository>\r\n\t\t<pluginRepository>\r\n\t\t\t<id>spring-snapshots</id>\r\n\t\t\t<name>Spring Snapshots</name>\r\n\t\t\t<url>https://repo.spring.io/snapshot</url>\r\n\t\t\t<releases>\r\n\t\t\t\t<enabled>false</enabled>\r\n\t\t\t</releases>\r\n\t\t</pluginRepository>\r\n\t</pluginRepositories>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../authenticationMicroservice/pom.xml b/../authenticationMicroservice/pom.xml
--- a/../authenticationMicroservice/pom.xml	
+++ b/../authenticationMicroservice/pom.xml	
@@ -15,8 +15,18 @@
 	<description>Authentication Microservice</description>
 	<properties>
 		<java.version>17</java.version>
+		<spring-cloud.version>2022.0.0</spring-cloud.version>
 	</properties>
+
 	<dependencies>
+		<dependency>
+			<groupId>org.springframework.cloud</groupId>
+			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.cloud</groupId>
+			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
+		</dependency>
 		<dependency>
 			<groupId>com.mysql</groupId>
 			<artifactId>mysql-connector-j</artifactId>
@@ -57,6 +67,17 @@
 			<scope>test</scope>
 		</dependency>
 	</dependencies>
+	<dependencyManagement>
+		<dependencies>
+			<dependency>
+				<groupId>org.springframework.cloud</groupId>
+				<artifactId>spring-cloud-dependencies</artifactId>
+				<version>${spring-cloud.version}</version>
+				<type>pom</type>
+				<scope>import</scope>
+			</dependency>
+		</dependencies>
+	</dependencyManagement>
 
 	<build>
 		<plugins>
Index: target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/application.yml b/target/classes/application.yml
new file mode 100644
--- /dev/null	
+++ b/target/classes/application.yml	
@@ -0,0 +1,10 @@
+
+spring:
+  application:
+    name: BIDDING-MICROSERVICE
+
+
+eureka:
+  client:
+    service-url:
+      defaultZone: http://localhost:8762/eureka/
Index: ../productService/target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../productService/target/classes/application.yml b/../productService/target/classes/application.yml
new file mode 100644
--- /dev/null	
+++ b/../productService/target/classes/application.yml	
@@ -0,0 +1,10 @@
+
+spring:
+  application:
+    name: PRODUCT-MICROSERVICE
+
+
+eureka:
+  client:
+    service-url:
+      defaultZone: http://localhost:8762/eureka/
\ No newline at end of file
Index: ../userMicroservice/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../userMicroservice/src/main/resources/application.yml b/../userMicroservice/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/../userMicroservice/src/main/resources/application.yml	
@@ -0,0 +1,8 @@
+
+spring:
+  application:
+    name: USER-MICROSERVICE
+eureka:
+  client:
+    service-url:
+      defaultZone: http://localhost:8762/eureka/
\ No newline at end of file
Index: ../productService/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.datasource.url=jdbc:mysql://localhost:3306/demo\r\nspring.datasource.username=root\r\nspring.datasource.password=Arun.v835\r\nspring.jpa.hibernate.ddl-auto=update\r\n\r\nserver.port=5000\r\n## Hibernate Properties\r\n# The SQL dialect makes Hibernate generate better SQL for the chosen database\r\n#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/../productService/src/main/resources/application.properties b/../productService/src/main/resources/application.properties
--- a/../productService/src/main/resources/application.properties	
+++ b/../productService/src/main/resources/application.properties	
@@ -1,9 +1,9 @@
-spring.datasource.url=jdbc:mysql://localhost:3306/demo
+spring.datasource.url=jdbc:mysql://localhost:3306/Demo?createDatabaseIfNotExist=true
 spring.datasource.username=root
-spring.datasource.password=Arun.v835
+spring.datasource.password=root
 spring.jpa.hibernate.ddl-auto=update
 
-server.port=5000
+server.port=8083
 ## Hibernate Properties
 # The SQL dialect makes Hibernate generate better SQL for the chosen database
 #spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
Index: ../productService/.idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"productService\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n  </component>\r\n  <component name=\"JavacSettings\">\r\n    <option name=\"ADDITIONAL_OPTIONS_OVERRIDE\">\r\n      <module name=\"productService\" options=\"-parameters\" />\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../productService/.idea/compiler.xml b/../productService/.idea/compiler.xml
--- a/../productService/.idea/compiler.xml	
+++ b/../productService/.idea/compiler.xml	
@@ -2,6 +2,7 @@
 <project version="4">
   <component name="CompilerConfiguration">
     <annotationProcessing>
+      <profile default="true" name="Default" enabled="true" />
       <profile name="Maven default annotation processors profile" enabled="true">
         <sourceOutputDir name="target/generated-sources/annotations" />
         <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
Index: ../ServiceRegistary/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../ServiceRegistary/.idea/workspace.xml b/../ServiceRegistary/.idea/workspace.xml
new file mode 100644
--- /dev/null	
+++ b/../ServiceRegistary/.idea/workspace.xml	
@@ -0,0 +1,176 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="9541f18c-867f-4d01-9756-8d9db1c3f3c5" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/../BiddingService/src/main/resources/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../BiddingService/target/classes/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../BiddingService/target/classes/com/wrapperteam/bidding/exception/AlreadyExistException.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../BiddingService/target/classes/com/wrapperteam/bidding/model/biddingmodel$biddingmodelBuilder.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../authenticationMicroservice/src/main/resources/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../productService/src/main/resources/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../productService/target/classes/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../productService/target/productService-0.0.1-SNAPSHOT.jar" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../productService/target/productService-0.0.1-SNAPSHOT.jar.original" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../productService/target/test-classes/com/auction/productService/ProductServiceApplicationTests.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../service-registary/.gitignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../service-registary/.mvn/wrapper/maven-wrapper.jar" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../service-registary/.mvn/wrapper/maven-wrapper.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../service-registary/mvnw" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../service-registary/mvnw.cmd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../service-registary/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../service-registary/src/main/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplication.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../service-registary/src/main/resources/application.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../service-registary/src/test/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplicationTests.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../userMicroservice/src/main/resources/application.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../BiddingService/.idea/compiler.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../BiddingService/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/src/main/java/com/wrapperteam/bidding/BiddingApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/../BiddingService/src/main/java/com/wrapperteam/bidding/BiddingApplication.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/src/main/java/com/wrapperteam/bidding/service/biddingservice.java" beforeDir="false" afterPath="$PROJECT_DIR$/../BiddingService/src/main/java/com/wrapperteam/bidding/service/biddingservice.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/target/Bidding-0.0.1-SNAPSHOT.jar" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/target/Bidding-0.0.1-SNAPSHOT.jar.original" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/target/classes/com/wrapperteam/bidding/BiddingApplication.class" beforeDir="false" afterPath="$PROJECT_DIR$/../BiddingService/target/classes/com/wrapperteam/bidding/BiddingApplication.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/target/classes/com/wrapperteam/bidding/controller/biddingcontroller.class" beforeDir="false" afterPath="$PROJECT_DIR$/../BiddingService/target/classes/com/wrapperteam/bidding/controller/biddingcontroller.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/target/classes/com/wrapperteam/bidding/model/biddingmodel.class" beforeDir="false" afterPath="$PROJECT_DIR$/../BiddingService/target/classes/com/wrapperteam/bidding/model/biddingmodel.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/target/classes/com/wrapperteam/bidding/service/biddingservice.class" beforeDir="false" afterPath="$PROJECT_DIR$/../BiddingService/target/classes/com/wrapperteam/bidding/service/biddingservice.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/target/maven-archiver/pom.properties" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/../BiddingService/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/../BiddingService/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/target/surefire-reports/TEST-com.wrapperteam.bidding.BiddingApplicationTests.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/target/surefire-reports/com.wrapperteam.bidding.BiddingApplicationTests.txt" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../BiddingService/target/test-classes/com/wrapperteam/bidding/BiddingApplicationTests.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.mvn/wrapper/maven-wrapper.jar" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.mvn/wrapper/maven-wrapper.properties" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/mvnw" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/mvnw.cmd" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplication.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/application.properties" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplicationTests.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../authenticationMicroservice/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../authenticationMicroservice/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../authenticationMicroservice/src/main/java/com/ust/AuthenticationMicroservice/authenticationMicroservice/AuthenticationMicroserviceApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/../authenticationMicroservice/src/main/java/com/ust/AuthenticationMicroservice/authenticationMicroservice/AuthenticationMicroserviceApplication.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../authenticationMicroservice/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/../authenticationMicroservice/src/main/resources/application.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../cloud-gateway/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/../cloud-gateway/src/main/resources/application.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../productService/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../productService/.idea/compiler.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../productService/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../productService/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../productService/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/../productService/src/main/resources/application.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../productService/target/classes/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/../productService/target/classes/application.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../productService/target/classes/com/auction/productService/controller/ProductController.class" beforeDir="false" afterPath="$PROJECT_DIR$/../productService/target/classes/com/auction/productService/controller/ProductController.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../productService/target/classes/com/auction/productService/model/Product$ProductBuilder.class" beforeDir="false" afterPath="$PROJECT_DIR$/../productService/target/classes/com/auction/productService/model/Product$ProductBuilder.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../productService/target/classes/com/auction/productService/model/Product.class" beforeDir="false" afterPath="$PROJECT_DIR$/../productService/target/classes/com/auction/productService/model/Product.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../productService/target/classes/com/auction/productService/productDto/ProductDto$ProductDtoBuilder.class" beforeDir="false" afterPath="$PROJECT_DIR$/../productService/target/classes/com/auction/productService/productDto/ProductDto$ProductDtoBuilder.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../productService/target/classes/com/auction/productService/productDto/ProductDto.class" beforeDir="false" afterPath="$PROJECT_DIR$/../productService/target/classes/com/auction/productService/productDto/ProductDto.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../productService/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/../productService/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../productService/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/../productService/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../productService/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/../productService/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../productService/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/../productService/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../userMicroservice/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../userMicroservice/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../userMicroservice/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/../userMicroservice/src/main/resources/application.properties" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
+  <component name="MavenImportPreferences">
+    <option name="importingSettings">
+      <MavenImportingSettings>
+        <option name="workspaceImportEnabled" value="true" />
+      </MavenImportingSettings>
+    </option>
+  </component>
+  <component name="ProjectId" id="2Klw2RmbMSVi7POBWNhiaqfaDqA" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RequestMappingsPanelOrder0": "0",
+    "RequestMappingsPanelOrder1": "1",
+    "RequestMappingsPanelWidth0": "75",
+    "RequestMappingsPanelWidth1": "75",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "last_opened_file_path": "C:/Users/ustjavafsdb403/Auctionkart/service-registary",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "settings.editor.selected.configurable": "MavenSettings",
+    "spring.configuration.checksum": "739b970db5855cf2b36ae63863bb2879",
+    "vue.rearranger.settings.migration": "true"
+  }
+}]]></component>
+  <component name="RunDashboard">
+    <option name="configurationTypes">
+      <set>
+        <option value="SpringBootApplicationConfigurationType" />
+      </set>
+    </option>
+  </component>
+  <component name="RunManager" selected="Spring Boot.ServiceRegistaryApplication (2)">
+    <configuration default="true" type="JetRunConfigurationType">
+      <module name="service -registary" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
+      <module name="service -registary" />
+      <option name="filePath" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="ServiceRegistaryApplication (2)" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
+      <module name="service-registary" />
+      <option name="SPRING_BOOT_MAIN_CLASS" value="com.wrapperteam.serviceregistary.ServiceRegistaryApplication" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="ServiceRegistaryApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
+      <module name="ServiceRegistary" />
+      <option name="SPRING_BOOT_MAIN_CLASS" value="com.wrapperteam.serviceregistary.ServiceRegistaryApplication" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="9541f18c-867f-4d01-9756-8d9db1c3f3c5" name="Changes" comment="" />
+      <created>1674562274114</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1674562274114</updated>
+      <workItem from="1674562275472" duration="4326000" />
+      <workItem from="1674715911264" duration="2521000" />
+      <workItem from="1674750525958" duration="11886000" />
+      <workItem from="1674816253218" duration="618000" />
+    </task>
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+  <component name="XSLT-Support.FileAssociations.UIState">
+    <expand />
+    <select />
+  </component>
+</project>
\ No newline at end of file
Index: ../service-registary/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../service-registary/pom.xml b/../service-registary/pom.xml
new file mode 100644
--- /dev/null	
+++ b/../service-registary/pom.xml	
@@ -0,0 +1,63 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>3.0.2</version>
+        <relativePath/> <!-- lookup parent from repository -->
+    </parent>
+    <groupId>com.wrapperteam</groupId>
+    <artifactId>ServiceRegistary</artifactId>
+    <version>0.0.1-SNAPSHOT</version>
+    <name>ServiceRegistary</name>
+    <description>ServiceRegistary</description>
+    <properties>
+        <java.version>17</java.version>
+        <spring-cloud.version>2022.0.0</spring-cloud.version>
+    </properties>
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+    <dependencyManagement>
+        <dependencies>
+            <dependency>
+                <groupId>org.springframework.cloud</groupId>
+                <artifactId>spring-cloud-dependencies</artifactId>
+                <version>${spring-cloud.version}</version>
+                <type>pom</type>
+                <scope>import</scope>
+            </dependency>
+        </dependencies>
+    </dependencyManagement>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+            </plugin>
+        </plugins>
+    </build>
+    <repositories>
+        <repository>
+            <id>netflix-candidates</id>
+            <name>Netflix Candidates</name>
+            <url>https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates</url>
+            <snapshots>
+                <enabled>false</enabled>
+            </snapshots>
+        </repository>
+    </repositories>
+
+</project>
Index: ../service-registary/.mvn/wrapper/maven-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/../service-registary/.mvn/wrapper/maven-wrapper.properties b/../service-registary/.mvn/wrapper/maven-wrapper.properties
new file mode 100644
--- /dev/null	
+++ b/../service-registary/.mvn/wrapper/maven-wrapper.properties	
@@ -0,0 +1,2 @@
+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.8.6/apache-maven-3.8.6-bin.zip
+wrapperUrl=https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar
Index: ../userMicroservice/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>2.7.8-SNAPSHOT</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.ust.userMicroservice</groupId>\r\n\t<artifactId>userMicroservice</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>userMicroservice</name>\r\n\t<description>User Microservice</description>\r\n\t<properties>\r\n\t\t<java.version>11</java.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\t\t<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>mysql</groupId>\r\n\t\t\t<artifactId>mysql-connector-java</artifactId>\r\n\t\t\t<version>8.0.31</version>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<!--<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<version>1.18.2</version>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>-->\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\t<repositories>\r\n\t\t<repository>\r\n\t\t\t<id>spring-milestones</id>\r\n\t\t\t<name>Spring Milestones</name>\r\n\t\t\t<url>https://repo.spring.io/milestone</url>\r\n\t\t\t<snapshots>\r\n\t\t\t\t<enabled>false</enabled>\r\n\t\t\t</snapshots>\r\n\t\t</repository>\r\n\t\t<repository>\r\n\t\t\t<id>spring-snapshots</id>\r\n\t\t\t<name>Spring Snapshots</name>\r\n\t\t\t<url>https://repo.spring.io/snapshot</url>\r\n\t\t\t<releases>\r\n\t\t\t\t<enabled>false</enabled>\r\n\t\t\t</releases>\r\n\t\t</repository>\r\n\t</repositories>\r\n\t<pluginRepositories>\r\n\t\t<pluginRepository>\r\n\t\t\t<id>spring-milestones</id>\r\n\t\t\t<name>Spring Milestones</name>\r\n\t\t\t<url>https://repo.spring.io/milestone</url>\r\n\t\t\t<snapshots>\r\n\t\t\t\t<enabled>false</enabled>\r\n\t\t\t</snapshots>\r\n\t\t</pluginRepository>\r\n\t\t<pluginRepository>\r\n\t\t\t<id>spring-snapshots</id>\r\n\t\t\t<name>Spring Snapshots</name>\r\n\t\t\t<url>https://repo.spring.io/snapshot</url>\r\n\t\t\t<releases>\r\n\t\t\t\t<enabled>false</enabled>\r\n\t\t\t</releases>\r\n\t\t</pluginRepository>\r\n\t</pluginRepositories>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../userMicroservice/pom.xml b/../userMicroservice/pom.xml
--- a/../userMicroservice/pom.xml	
+++ b/../userMicroservice/pom.xml	
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>org.springframework.boot</groupId>
 		<artifactId>spring-boot-starter-parent</artifactId>
-		<version>2.7.8-SNAPSHOT</version>
+		<version>3.0.1</version>
 		<relativePath/> <!-- lookup parent from repository -->
 	</parent>
 	<groupId>com.ust.userMicroservice</groupId>
@@ -14,9 +14,20 @@
 	<name>userMicroservice</name>
 	<description>User Microservice</description>
 	<properties>
-		<java.version>11</java.version>
+		<java.version>17</java.version>
+		<spring-cloud.version>2022.0.0</spring-cloud.version>
+
+
 	</properties>
 	<dependencies>
+		<dependency>
+			<groupId>org.springframework.cloud</groupId>
+			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.cloud</groupId>
+			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
+		</dependency>
 		<dependency>
 			<groupId>org.springframework.boot</groupId>
 			<artifactId>spring-boot-starter-data-jpa</artifactId>
@@ -57,6 +68,17 @@
 			<scope>test</scope>
 		</dependency>
 	</dependencies>
+	<dependencyManagement>
+		<dependencies>
+			<dependency>
+				<groupId>org.springframework.cloud</groupId>
+				<artifactId>spring-cloud-dependencies</artifactId>
+				<version>${spring-cloud.version}</version>
+				<type>pom</type>
+				<scope>import</scope>
+			</dependency>
+		</dependencies>
+	</dependencyManagement>
 
 	<build>
 		<plugins>
Index: ../service-registary/mvnw
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../service-registary/mvnw b/../service-registary/mvnw
new file mode 100644
--- /dev/null	
+++ b/../service-registary/mvnw	
@@ -0,0 +1,316 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Maven Start Up Batch script
+#
+# Required ENV vars:
+# ------------------
+#   JAVA_HOME - location of a JDK home dir
+#
+# Optional ENV vars
+# -----------------
+#   M2_HOME - location of maven2's installed home dir
+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
+#     e.g. to debug Maven itself, use
+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+# ----------------------------------------------------------------------------
+
+if [ -z "$MAVEN_SKIP_RC" ] ; then
+
+  if [ -f /usr/local/etc/mavenrc ] ; then
+    . /usr/local/etc/mavenrc
+  fi
+
+  if [ -f /etc/mavenrc ] ; then
+    . /etc/mavenrc
+  fi
+
+  if [ -f "$HOME/.mavenrc" ] ; then
+    . "$HOME/.mavenrc"
+  fi
+
+fi
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false;
+darwin=false;
+mingw=false
+case "`uname`" in
+  CYGWIN*) cygwin=true ;;
+  MINGW*) mingw=true;;
+  Darwin*) darwin=true
+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
+    if [ -z "$JAVA_HOME" ]; then
+      if [ -x "/usr/libexec/java_home" ]; then
+        export JAVA_HOME="`/usr/libexec/java_home`"
+      else
+        export JAVA_HOME="/Library/Java/Home"
+      fi
+    fi
+    ;;
+esac
+
+if [ -z "$JAVA_HOME" ] ; then
+  if [ -r /etc/gentoo-release ] ; then
+    JAVA_HOME=`java-config --jre-home`
+  fi
+fi
+
+if [ -z "$M2_HOME" ] ; then
+  ## resolve links - $0 may be a link to maven's home
+  PRG="$0"
+
+  # need this for relative symlinks
+  while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+      PRG="$link"
+    else
+      PRG="`dirname "$PRG"`/$link"
+    fi
+  done
+
+  saveddir=`pwd`
+
+  M2_HOME=`dirname "$PRG"`/..
+
+  # make it fully qualified
+  M2_HOME=`cd "$M2_HOME" && pwd`
+
+  cd "$saveddir"
+  # echo Using m2 at $M2_HOME
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --unix "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
+fi
+
+# For Mingw, ensure paths are in UNIX format before anything is touched
+if $mingw ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME="`(cd "$M2_HOME"; pwd)`"
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  javaExecutable="`which javac`"
+  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then
+    # readlink(1) is not available as standard on Solaris 10.
+    readLink=`which readlink`
+    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then
+      if $darwin ; then
+        javaHome="`dirname \"$javaExecutable\"`"
+        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"
+      else
+        javaExecutable="`readlink -f \"$javaExecutable\"`"
+      fi
+      javaHome="`dirname \"$javaExecutable\"`"
+      javaHome=`expr "$javaHome" : '\(.*\)/bin'`
+      JAVA_HOME="$javaHome"
+      export JAVA_HOME
+    fi
+  fi
+fi
+
+if [ -z "$JAVACMD" ] ; then
+  if [ -n "$JAVA_HOME"  ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD="`\\unset -f command; \\command -v java`"
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ] ; then
+  echo "Error: JAVA_HOME is not defined correctly." >&2
+  echo "  We cannot execute $JAVACMD" >&2
+  exit 1
+fi
+
+if [ -z "$JAVA_HOME" ] ; then
+  echo "Warning: JAVA_HOME environment variable is not set."
+fi
+
+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
+
+# traverses directory structure from process work directory to filesystem root
+# first directory with .mvn subdirectory is considered project base directory
+find_maven_basedir() {
+
+  if [ -z "$1" ]
+  then
+    echo "Path not specified to find_maven_basedir"
+    return 1
+  fi
+
+  basedir="$1"
+  wdir="$1"
+  while [ "$wdir" != '/' ] ; do
+    if [ -d "$wdir"/.mvn ] ; then
+      basedir=$wdir
+      break
+    fi
+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
+    if [ -d "${wdir}" ]; then
+      wdir=`cd "$wdir/.."; pwd`
+    fi
+    # end of workaround
+  done
+  echo "${basedir}"
+}
+
+# concatenates all lines of a file
+concat_lines() {
+  if [ -f "$1" ]; then
+    echo "$(tr -s '\n' ' ' < "$1")"
+  fi
+}
+
+BASE_DIR=`find_maven_basedir "$(pwd)"`
+if [ -z "$BASE_DIR" ]; then
+  exit 1;
+fi
+
+##########################################################################################
+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+# This allows using the maven wrapper in projects that prohibit checking in binary data.
+##########################################################################################
+if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Found .mvn/wrapper/maven-wrapper.jar"
+    fi
+else
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."
+    fi
+    if [ -n "$MVNW_REPOURL" ]; then
+      jarUrl="$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar"
+    else
+      jarUrl="https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar"
+    fi
+    while IFS="=" read key value; do
+      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;
+      esac
+    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Downloading from: $jarUrl"
+    fi
+    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"
+    if $cygwin; then
+      wrapperJarPath=`cygpath --path --windows "$wrapperJarPath"`
+    fi
+
+    if command -v wget > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found wget ... using wget"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            wget "$jarUrl" -O "$wrapperJarPath" || rm -f "$wrapperJarPath"
+        else
+            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD "$jarUrl" -O "$wrapperJarPath" || rm -f "$wrapperJarPath"
+        fi
+    elif command -v curl > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found curl ... using curl"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            curl -o "$wrapperJarPath" "$jarUrl" -f
+        else
+            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o "$wrapperJarPath" "$jarUrl" -f
+        fi
+
+    else
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Falling back to using Java to download"
+        fi
+        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"
+        # For Cygwin, switch paths to Windows format before running javac
+        if $cygwin; then
+          javaClass=`cygpath --path --windows "$javaClass"`
+        fi
+        if [ -e "$javaClass" ]; then
+            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Compiling MavenWrapperDownloader.java ..."
+                fi
+                # Compiling the Java class
+                ("$JAVA_HOME/bin/javac" "$javaClass")
+            fi
+            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                # Running the downloader
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Running MavenWrapperDownloader.java ..."
+                fi
+                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")
+            fi
+        fi
+    fi
+fi
+##########################################################################################
+# End of extension
+##########################################################################################
+
+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}
+if [ "$MVNW_VERBOSE" = true ]; then
+  echo $MAVEN_PROJECTBASEDIR
+fi
+MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --path --windows "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
+  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
+fi
+
+# Provide a "standardized" way to retrieve the CLI args that will
+# work with both Windows and non-Windows executions.
+MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"
+export MAVEN_CMD_LINE_ARGS
+
+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+exec "$JAVACMD" \
+  $MAVEN_OPTS \
+  $MAVEN_DEBUG_OPTS \
+  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
+  "-Dmaven.home=${M2_HOME}" \
+  "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
Index: ../authenticationMicroservice/src/main/java/com/ust/AuthenticationMicroservice/authenticationMicroservice/AuthenticationMicroserviceApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ust.AuthenticationMicroservice.authenticationMicroservice;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\n@SpringBootApplication\r\npublic class AuthenticationMicroserviceApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(AuthenticationMicroserviceApplication.class, args);\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../authenticationMicroservice/src/main/java/com/ust/AuthenticationMicroservice/authenticationMicroservice/AuthenticationMicroserviceApplication.java b/../authenticationMicroservice/src/main/java/com/ust/AuthenticationMicroservice/authenticationMicroservice/AuthenticationMicroserviceApplication.java
--- a/../authenticationMicroservice/src/main/java/com/ust/AuthenticationMicroservice/authenticationMicroservice/AuthenticationMicroserviceApplication.java	
+++ b/../authenticationMicroservice/src/main/java/com/ust/AuthenticationMicroservice/authenticationMicroservice/AuthenticationMicroserviceApplication.java	
@@ -3,7 +3,10 @@
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 
+import org.springframework.context.annotation.Bean;
+
 @SpringBootApplication
+
 public class AuthenticationMicroserviceApplication {
 
 	public static void main(String[] args) {
Index: ../productService/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../productService/src/main/resources/application.yml b/../productService/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/../productService/src/main/resources/application.yml	
@@ -0,0 +1,10 @@
+
+spring:
+  application:
+    name: PRODUCT-MICROSERVICE
+
+
+eureka:
+  client:
+    service-url:
+      defaultZone: http://localhost:8762/eureka/
\ No newline at end of file
Index: ../authenticationMicroservice/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.datasource.driver-class-name=com.mysql.jdbc.Driver\r\nspring.datasource.url=jdbc:mysql://localhost:3306/UserDatabase?createDatabaseIfNotExist=true\r\nspring.datasource.username=root\r\nspring.datasource.password=root\r\nspring.jpa.show-sql=true\r\nspring.jpa.hibernate.ddl-auto=update\r\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/../authenticationMicroservice/src/main/resources/application.properties b/../authenticationMicroservice/src/main/resources/application.properties
--- a/../authenticationMicroservice/src/main/resources/application.properties	
+++ b/../authenticationMicroservice/src/main/resources/application.properties	
@@ -5,3 +5,4 @@
 spring.jpa.show-sql=true
 spring.jpa.hibernate.ddl-auto=update
 spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
+server.port=8081
\ No newline at end of file
Index: ../service-registary/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../service-registary/.gitignore b/../service-registary/.gitignore
new file mode 100644
--- /dev/null	
+++ b/../service-registary/.gitignore	
@@ -0,0 +1,33 @@
+HELP.md
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**/target/
+!**/src/test/**/target/
+
+### STS ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### IntelliJ IDEA ###
+.idea
+*.iws
+*.iml
+*.ipr
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+!**/src/main/**/build/
+!**/src/test/**/build/
+
+### VS Code ###
+.vscode/
Index: ../authenticationMicroservice/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../authenticationMicroservice/src/main/resources/application.yml b/../authenticationMicroservice/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/../authenticationMicroservice/src/main/resources/application.yml	
@@ -0,0 +1,10 @@
+
+spring:
+  application:
+    name: AUTHENTICATION-MICROSERVICE
+
+
+eureka:
+  client:
+    service-url:
+      defaultZone: http://localhost:8762/eureka/
Index: ../productService/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>E:\\e-auction\\productService\\src\\test\\java\\com\\auction\\productService\\ProductServiceApplicationTests.java\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../productService/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst b/../productService/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst
--- a/../productService/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst	
+++ b/../productService/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst	
@@ -1,1 +1,1 @@
-E:\e-auction\productService\src\test\java\com\auction\productService\ProductServiceApplicationTests.java
+C:\Users\ustjavafsdb403\Auctionkart\productService\src\test\java\com\auction\productService\ProductServiceApplicationTests.java
Index: ../service-registary/src/main/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../service-registary/src/main/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplication.java b/../service-registary/src/main/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplication.java
new file mode 100644
--- /dev/null	
+++ b/../service-registary/src/main/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplication.java	
@@ -0,0 +1,16 @@
+package com.wrapperteam.serviceregistary;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;
+
+@SpringBootApplication
+@EnableEurekaServer
+
+public class ServiceRegistaryApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(ServiceRegistaryApplication.class, args);
+    }
+
+}
Index: ../service-registary/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/../service-registary/src/main/resources/application.properties b/../service-registary/src/main/resources/application.properties
new file mode 100644
--- /dev/null	
+++ b/../service-registary/src/main/resources/application.properties	
@@ -0,0 +1,5 @@
+
+server.port=8762
+eureka.client.register-with-eureka=false
+eureka.client.fetch-registry=false
+
Index: ../userMicroservice/src/main/java/com/ust/userMicroservice/userMicroservice/model/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ust.userMicroservice.userMicroservice.model;\r\n\r\n\r\n\r\nimport lombok.*;\r\n\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.GeneratedValue;\r\nimport javax.persistence.GenerationType;\r\nimport javax.persistence.Id;\r\n\r\n\r\n@Entity\r\n@Data\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\n@Setter\r\n@Getter\r\npublic class User {\r\n    @Id\r\n    @GeneratedValue(strategy= GenerationType.AUTO)\r\n    private int userId;\r\n    private String name;\r\n    private String password;\r\n    private String userEmail;\r\n    private String phoneNumber;\r\n    private String address;\r\n    private String userType;\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../userMicroservice/src/main/java/com/ust/userMicroservice/userMicroservice/model/User.java b/../userMicroservice/src/main/java/com/ust/userMicroservice/userMicroservice/model/User.java
--- a/../userMicroservice/src/main/java/com/ust/userMicroservice/userMicroservice/model/User.java	
+++ b/../userMicroservice/src/main/java/com/ust/userMicroservice/userMicroservice/model/User.java	
@@ -2,12 +2,13 @@
 
 
 
+import jakarta.persistence.Entity;
+import jakarta.persistence.GeneratedValue;
+import jakarta.persistence.GenerationType;
+import jakarta.persistence.Id;
 import lombok.*;
 
-import javax.persistence.Entity;
-import javax.persistence.GeneratedValue;
-import javax.persistence.GenerationType;
-import javax.persistence.Id;
+
 
 
 @Entity
Index: src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/application.yml b/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/application.yml	
@@ -0,0 +1,10 @@
+
+spring:
+  application:
+    name: BIDDING-MICROSERVICE
+
+
+eureka:
+  client:
+    service-url:
+      defaultZone: http://localhost:8762/eureka/
Index: ../service-registary/src/test/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../service-registary/src/test/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplicationTests.java b/../service-registary/src/test/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplicationTests.java
new file mode 100644
--- /dev/null	
+++ b/../service-registary/src/test/java/com/wrapperteam/serviceregistary/ServiceRegistaryApplicationTests.java	
@@ -0,0 +1,13 @@
+package com.wrapperteam.serviceregistary;
+
+import org.junit.jupiter.api.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+@SpringBootTest
+class ServiceRegistaryApplicationTests {
+
+    @Test
+    void contextLoads() {
+    }
+
+}
Index: ../productService/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>E:\\e-auction\\productService\\src\\main\\java\\com\\auction\\productService\\productDto\\ProductDto.java\r\nE:\\e-auction\\productService\\src\\main\\java\\com\\auction\\productService\\repository\\ProductRepository.java\r\nE:\\e-auction\\productService\\src\\main\\java\\com\\auction\\productService\\controller\\ProductController.java\r\nE:\\e-auction\\productService\\src\\main\\java\\com\\auction\\productService\\model\\Product.java\r\nE:\\e-auction\\productService\\src\\main\\java\\com\\auction\\productService\\ProductServiceApplication.java\r\nE:\\e-auction\\productService\\src\\main\\java\\com\\auction\\productService\\service\\ProductService.java\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../productService/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst b/../productService/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
--- a/../productService/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst	
+++ b/../productService/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst	
@@ -1,6 +1,6 @@
-E:\e-auction\productService\src\main\java\com\auction\productService\productDto\ProductDto.java
-E:\e-auction\productService\src\main\java\com\auction\productService\repository\ProductRepository.java
-E:\e-auction\productService\src\main\java\com\auction\productService\controller\ProductController.java
-E:\e-auction\productService\src\main\java\com\auction\productService\model\Product.java
-E:\e-auction\productService\src\main\java\com\auction\productService\ProductServiceApplication.java
-E:\e-auction\productService\src\main\java\com\auction\productService\service\ProductService.java
+C:\Users\ustjavafsdb403\Auctionkart\productService\src\main\java\com\auction\productService\service\ProductService.java
+C:\Users\ustjavafsdb403\Auctionkart\productService\src\main\java\com\auction\productService\productDto\ProductDto.java
+C:\Users\ustjavafsdb403\Auctionkart\productService\src\main\java\com\auction\productService\repository\ProductRepository.java
+C:\Users\ustjavafsdb403\Auctionkart\productService\src\main\java\com\auction\productService\controller\ProductController.java
+C:\Users\ustjavafsdb403\Auctionkart\productService\src\main\java\com\auction\productService\model\Product.java
+C:\Users\ustjavafsdb403\Auctionkart\productService\src\main\java\com\auction\productService\ProductServiceApplication.java
Index: ../userMicroservice/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.datasource.driver-class-name=com.mysql.jdbc.Driver\r\nspring.datasource.url=jdbc:mysql://localhost:3306/UserDatabase?createDatabaseIfNotExist=true\r\nspring.datasource.username=root\r\nspring.datasource.password=00923289\r\nspring.jpa.show-sql=true\r\nspring.jpa.hibernate.ddl-auto=update\r\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect\r\nserver.port=8081
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/../userMicroservice/src/main/resources/application.properties b/../userMicroservice/src/main/resources/application.properties
--- a/../userMicroservice/src/main/resources/application.properties	
+++ b/../userMicroservice/src/main/resources/application.properties	
@@ -1,8 +1,8 @@
 spring.datasource.driver-class-name=com.mysql.jdbc.Driver
 spring.datasource.url=jdbc:mysql://localhost:3306/UserDatabase?createDatabaseIfNotExist=true
 spring.datasource.username=root
-spring.datasource.password=00923289
+spring.datasource.password=root
 spring.jpa.show-sql=true
 spring.jpa.hibernate.ddl-auto=update
 spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
-server.port=8081
\ No newline at end of file
+server.port=8082
\ No newline at end of file
Index: ../productService/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>3.0.2</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.auction</groupId>\r\n\t<artifactId>productService</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>productService</name>\r\n\t<description>productService</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.mysql</groupId>\r\n\t\t\t<artifactId>mysql-connector-j</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<excludes>\r\n\t\t\t\t\t\t<exclude>\r\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t\t\t\t</exclude>\r\n\t\t\t\t\t</excludes>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../productService/pom.xml b/../productService/pom.xml
--- a/../productService/pom.xml	
+++ b/../productService/pom.xml	
@@ -15,8 +15,21 @@
 	<description>productService</description>
 	<properties>
 		<java.version>17</java.version>
+		<spring-cloud.version>2022.0.0</spring-cloud.version>
 	</properties>
 	<dependencies>
+		<dependency>
+			<groupId>org.springframework.cloud</groupId>
+			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.cloud</groupId>
+			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.cloud</groupId>
+			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
+		</dependency>
 		<dependency>
 			<groupId>org.springframework.boot</groupId>
 			<artifactId>spring-boot-starter-data-jpa</artifactId>
@@ -48,6 +61,17 @@
 			<scope>test</scope>
 		</dependency>
 	</dependencies>
+	<dependencyManagement>
+		<dependencies>
+			<dependency>
+				<groupId>org.springframework.cloud</groupId>
+				<artifactId>spring-cloud-dependencies</artifactId>
+				<version>${spring-cloud.version}</version>
+				<type>pom</type>
+				<scope>import</scope>
+			</dependency>
+		</dependencies>
+	</dependencyManagement>
 
 	<build>
 		<plugins>
Index: ../service-registary/mvnw.cmd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../service-registary/mvnw.cmd b/../service-registary/mvnw.cmd
new file mode 100644
--- /dev/null	
+++ b/../service-registary/mvnw.cmd	
@@ -0,0 +1,188 @@
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    https://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Maven Start Up Batch script
+@REM
+@REM Required ENV vars:
+@REM JAVA_HOME - location of a JDK home dir
+@REM
+@REM Optional ENV vars
+@REM M2_HOME - location of maven2's installed home dir
+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending
+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
+@REM     e.g. to debug Maven itself, use
+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+@REM ----------------------------------------------------------------------------
+
+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
+@echo off
+@REM set title of command window
+title %0
+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'
+@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%
+
+@REM set %HOME% to equivalent of $HOME
+if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")
+
+@REM Execute a user defined script before this one
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre
+@REM check for pre script, once with legacy .bat ending and once with .cmd ending
+if exist "%USERPROFILE%\mavenrc_pre.bat" call "%USERPROFILE%\mavenrc_pre.bat" %*
+if exist "%USERPROFILE%\mavenrc_pre.cmd" call "%USERPROFILE%\mavenrc_pre.cmd" %*
+:skipRcPre
+
+@setlocal
+
+set ERROR_CODE=0
+
+@REM To isolate internal variables from possible post scripts, we use another setlocal
+@setlocal
+
+@REM ==== START VALIDATION ====
+if not "%JAVA_HOME%" == "" goto OkJHome
+
+echo.
+echo Error: JAVA_HOME not found in your environment. >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+:OkJHome
+if exist "%JAVA_HOME%\bin\java.exe" goto init
+
+echo.
+echo Error: JAVA_HOME is set to an invalid directory. >&2
+echo JAVA_HOME = "%JAVA_HOME%" >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+@REM ==== END VALIDATION ====
+
+:init
+
+@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".
+@REM Fallback to current working directory if not found.
+
+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
+IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir
+
+set EXEC_DIR=%CD%
+set WDIR=%EXEC_DIR%
+:findBaseDir
+IF EXIST "%WDIR%"\.mvn goto baseDirFound
+cd ..
+IF "%WDIR%"=="%CD%" goto baseDirNotFound
+set WDIR=%CD%
+goto findBaseDir
+
+:baseDirFound
+set MAVEN_PROJECTBASEDIR=%WDIR%
+cd "%EXEC_DIR%"
+goto endDetectBaseDir
+
+:baseDirNotFound
+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
+cd "%EXEC_DIR%"
+
+:endDetectBaseDir
+
+IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig
+
+@setlocal EnableExtensions EnableDelayedExpansion
+for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%
+
+:endReadAdditionalConfig
+
+SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"
+set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"
+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar"
+
+FOR /F "usebackq tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO (
+    IF "%%A"=="wrapperUrl" SET DOWNLOAD_URL=%%B
+)
+
+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
+if exist %WRAPPER_JAR% (
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Found %WRAPPER_JAR%
+    )
+) else (
+    if not "%MVNW_REPOURL%" == "" (
+        SET DOWNLOAD_URL="%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar"
+    )
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Couldn't find %WRAPPER_JAR%, downloading it ...
+        echo Downloading from: %DOWNLOAD_URL%
+    )
+
+    powershell -Command "&{"^
+		"$webclient = new-object System.Net.WebClient;"^
+		"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {"^
+		"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');"^
+		"}"^
+		"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"^
+		"}"
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Finished downloading %WRAPPER_JAR%
+    )
+)
+@REM End of extension
+
+@REM Provide a "standardized" way to retrieve the CLI args that will
+@REM work with both Windows and non-Windows executions.
+set MAVEN_CMD_LINE_ARGS=%*
+
+%MAVEN_JAVA_EXE% ^
+  %JVM_CONFIG_MAVEN_PROPS% ^
+  %MAVEN_OPTS% ^
+  %MAVEN_DEBUG_OPTS% ^
+  -classpath %WRAPPER_JAR% ^
+  "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" ^
+  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
+if ERRORLEVEL 1 goto error
+goto end
+
+:error
+set ERROR_CODE=1
+
+:end
+@endlocal & set ERROR_CODE=%ERROR_CODE%
+
+if not "%MAVEN_SKIP_RC%"=="" goto skipRcPost
+@REM check for post script, once with legacy .bat ending and once with .cmd ending
+if exist "%USERPROFILE%\mavenrc_post.bat" call "%USERPROFILE%\mavenrc_post.bat"
+if exist "%USERPROFILE%\mavenrc_post.cmd" call "%USERPROFILE%\mavenrc_post.cmd"
+:skipRcPost
+
+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'
+if "%MAVEN_BATCH_PAUSE%"=="on" pause
+
+if "%MAVEN_TERMINATE_CMD%"=="on" exit %ERROR_CODE%
+
+cmd /C exit /B %ERROR_CODE%
Index: ../productService/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>com\\auction\\productService\\model\\Product.class\r\ncom\\auction\\productService\\productDto\\ProductDto.class\r\ncom\\auction\\productService\\repository\\ProductRepository.class\r\ncom\\auction\\productService\\controller\\ProductController.class\r\ncom\\auction\\productService\\service\\ProductService.class\r\ncom\\auction\\productService\\model\\Product$ProductBuilder.class\r\ncom\\auction\\productService\\ProductServiceApplication.class\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../productService/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst b/../productService/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
--- a/../productService/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	
+++ b/../productService/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	
@@ -5,3 +5,4 @@
 com\auction\productService\service\ProductService.class
 com\auction\productService\model\Product$ProductBuilder.class
 com\auction\productService\ProductServiceApplication.class
+com\auction\productService\productDto\ProductDto$ProductDtoBuilder.class
Index: ../productService/target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.datasource.url=jdbc:mysql://localhost:3306/demo\r\nspring.datasource.username=root\r\nspring.datasource.password=Arun.v835\r\nspring.jpa.hibernate.ddl-auto=update\r\n\r\nserver.port=5000\r\n## Hibernate Properties\r\n# The SQL dialect makes Hibernate generate better SQL for the chosen database\r\n#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/../productService/target/classes/application.properties b/../productService/target/classes/application.properties
--- a/../productService/target/classes/application.properties	
+++ b/../productService/target/classes/application.properties	
@@ -1,9 +1,9 @@
-spring.datasource.url=jdbc:mysql://localhost:3306/demo
+spring.datasource.url=jdbc:mysql://localhost:3306/Demo?createDatabaseIfNotExist=true
 spring.datasource.username=root
-spring.datasource.password=Arun.v835
+spring.datasource.password=root
 spring.jpa.hibernate.ddl-auto=update
 
-server.port=5000
+server.port=8083
 ## Hibernate Properties
 # The SQL dialect makes Hibernate generate better SQL for the chosen database
 #spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
